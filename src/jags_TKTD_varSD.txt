#
# SD with non-constant concentration
#
model {
  ######### priors
  kk_log10 ~ dnorm(kk_meanlog10, kk_taulog10)
  z_log10  ~ dnorm(z_meanlog10 , z_taulog10)
  kd_log10 ~ dnorm(kd_meanlog10, kd_taulog10)
  hb_log10 ~ dnorm(hb_meanlog10, hb_taulog10)

  ##### parameter transformation
  kk <- 10**kk_log10
  z  <- 10**z_log10
  kd <- 10**kd_log10
  hb <- 10**hb_log10

  ########## Computation of the likdlihood
  
  for (gr in 1:n.group){

      #---- Integration for the internal concentration
      diff.int[gr,1]=0
      int.hazard[gr,1]=0
    
      for(i in 2:N.intC[gr]){
      
        ### midpoint method:
        conc_midPoint[gr,i] = ((exp(kd * time_interp[gr,i]) * conc_interp[gr,i] + exp(kd * time_interp[gr,i-1]) * conc_interp[gr,i-1]) / 2 ) * (time_interp[gr,i] - time_interp[gr,i-1])

      }
      for(i in 1:N_int[gr]){
        D[gr,i] = kd * exp(- kd * time_interp[gr,i]) * sum(conc_midPoint[gr,1:i])
        
        hazard[gr,i] = kk * max(0, D[gr,i] - z) + hb
      }
      for(i in 2:N.intC[gr]){
        
        #### midpoint method:
        hazard_midPoint[gr,i] = ((hazard[gr,i] + hazard[gr,i-1])/2) * (time_interp[gr,i] - time_interp[gr,i-1])
      
      }
      #---------------------------------------------

      hazard_integr[gr,1] = -sum(hazard_midPoint[gr, 1:id_time_interp[gr,2]])
      
      psurv[gr,1] = exp(hazard_integr[gr,1])
      
      Nsurv[gr,1] ~ dbin(psurv[gr,1] , Nsurv_prec[gr,1])
      
      for (t in 2:n.time[gr]){
          
          hazard_integr[gr,t] = -sum( hazard_midPoint[ gr, 1:id.intCtime[gr,t+1] ] )
          
          psurv[gr,t] = exp(hazard_integr[gr,t])
          
          Nsurv[gr,t] ~ dbin(psurv[gr,t] / psurv[gr,t-1] , Nsurv_prec[gr,t])

      }
      
  }
}