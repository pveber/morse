#
# IT model with log-normal function.
#
model {
  #-------------------------------------------------------- priors
  
  log10.ke ~ dnorm(meanlog10.ke, taulog10.ke)
  log10.hb ~ dnorm(meanlog10.hb, taulog10.hb)
  
  log10.alpha ~ dnorm(meanlog10.alpha, taulog10.alpha)
  log10.beta ~ dunif(-2,2) # shape of the log-logistic // greater than 0
  
  #------------------------------------------parameter transformation
  
  ke <- 10**log10.ke
  hb <- 10**log10.hb
  
  alpha <- 10**log10.alpha
  beta <- 10**log10.beta
  
  ##------------------------------------ Computation of the likelihood
  
  for (gr in 1:n.group){
  
      #---- Integration for the internal concentration
          diff.int[gr,1] <- 0

          for(i in 2:N.intC[gr]){
          
          # methode des trapezes :
           diff.int[gr,i] <- (exp(ke*intC.time[gr,i]) * intC[gr,i] + exp(ke*intC.time[gr,i-1]) * intC[gr,i-1])/2*(intC.time[gr,i]-intC.time[gr,i-1])
          }
          
          for(i in 1:N.intC[gr]){
          
           D.int[gr,i] <- ke*exp(-ke*intC.time[gr,i])*sum(diff.int[gr,1:i])
  
          }

      #---------------------------------------------
  
      for (t in 1:n.time[gr]){

          D[gr,t] <- D.int[gr,id.intCtime[gr,t+1]]

          # -------------------- After, it is the same
          
          D.max[gr,t] <- max(D[gr,1:t])
      
      # LOG LOGISTIC
          Fprob[gr,t]  <- D.max[gr,t]**beta/(D.max[gr,t]**beta+alpha**beta)
          
          psurv[gr,t] <-  exp(-hb * time[gr,t]) * (1- Fprob[gr,t])
          
      }
      
      y[gr,1] ~ dbin(psurv[gr,1]/1 , Nprec[gr,1])
      for (t in 2:n.time[gr]){
        y[gr,t] ~ dbin(psurv[gr,t]/psurv[gr,t-1] , Nprec[gr,t])
      }

  }
}


