#
# IT model with log-normal function.
#
model {

  #-------------------------------------------------------- priors

  kd_log10 ~ dnorm(kd_meanlog10, kd_taulog10)
  hb_log10 ~ dnorm(hb_meanlog10, hb_taulog10)

  alpha_log10 ~ dnorm(alpha_meanlog10, alpha_taulog10)
  beta_log10 ~ dunif(beta_min, beta_max)

  #------------------------------------------parameter transformation

  kd <- 10**kd_log10
  hb <- 10**hb_log10

  alpha <- 10**alpha_log10
  beta <- 10**beta_log10

  ##------------------------------------ model

  for (gr in 1:n_group){

      for (t in 1:n_time){

          D[gr,t] <- conc[gr,t] * ( 1 - exp( - kd * time[gr,t] ))
          D_max[gr,t] <- max(D[gr,1:t])

          F[gr,t]  <- D_max[gr,t]**beta/(D_max[gr,t]**beta+alpha**beta)

          psurv[gr,t] <-  exp(-hb * time[gr,t]) * (1- F[gr,t])

      }

      Nsurv[gr,1] ~ dbin(psurv[gr,1]/1 , Nprec[gr,1])

      Nsurv_ppc[gr,1] ~ dbin(psurv[gr,1]/1 , Nprec[gr,1])
      Nsurv_sim[gr,1] ~ dbin(psurv[gr,1]/1 , Nprec[gr,1])

      for (t in 2:n.time){

        Nsurv[gr,t] ~ dbin(psurv[gr,t]/psurv[gr,t-1] , Nprec[gr,t])

        Nsurv_ppc[gr,t] ~ dbin(psurv[gr,t]/psurv[gr,t-1]  , Nprec[gr,t])
        Nsurv_sim[gr,t] ~ dbin(psurv[gr,t]/psurv[gr,t-1]  , Nsurv_sim[gr,t-1])

      }

  }

  # log_lik_Tot <- sum(log_lik_gr[1:n.group])

}


