#
# Here, it's exactly the JAGS model used in `MORSE` package in the function `survFitTKTD()`
#
model {
  ######### priors

  kd_taulog10 <- 1 / kd_sdlog10^2
  hb_taulog10 <- 1 / hb_sdlog10^2
  kk_taulog10 <- 1 / kk_sdlog10^2
  z_taulog10 <- 1 / z_sdlog10^2

  kk_log10 ~ dnorm(kk_meanlog10, kk_taulog10)
  z_log10  ~ dnorm(z_meanlog10 , z_taulog10)
  kd_log10 ~ dnorm(kd_meanlog10, kd_taulog10)
  hb_log10 ~ dnorm(hb_meanlog10, hb_taulog10)

  ##### parameter transformation
  kk <- 10**kk_log10
  z  <- 10**z_log10
  ke <- 10**kd_log10
  hb <- 10**hb_log10

  ########## Computation of the likelihood

  for (i in 1:n_data){

      tz[i] <- ifelse(x[i] > z, -1/kd * log( 1- R[i]), bigtime)
      R[i] <- ifelse(x[i] > z, z/xcor[i], 0.1)
      xcor[i] <- ifelse(x[i] > 0, x[i], 10)
      tref[i] <- max(tprec[i], tz[i])

      psurv[i] <- exp(-m0 * (t[i] - tprec[i]) + ifelse(t[i] > tNEC[i], -ks * ((x[i] - NEC) * (t[i] - tref[i]) + x[i]/kd * ( exp(-kd * t[i]) - exp(-kd * tref[i]))), 0))

      Nsurv[i] ~ dbin(psurv[i] , Nprec[i])

     ## ---------------------- generated data

      Nsurv_ppc[i] ~ dbin(psurv[i] , Nprec[i])

      ifelse(time[i] > 1,
            Nsurv_sim[i] ~ dbin(psurv[i] , Nsurv[i-1]),
            Nsurv_sim[i] ~ dbin(psurv[i] , Nprec[i]))
    }
}
